/*tslint:disable*/
////////////////////////////////////////////////////////
// ___   ___    _  _  ___ _____   ___ ___ ___ _____   //
// |   \ / _ \  | \| |/ _ \_   _| | __|   \_ _|_   _| //
// | |) | (_) | | .` | (_) || |   | _|| |) | |  | |   //
// |___/ \___/  |_|\_|\___/ |_|   |___|___/___| |_|   //
//                                                    //
// This file was generated by valory and should not   //
// be directly edited.                                //
////////////////////////////////////////////////////////


import {Valory, ApiRequest} from "valory-runtime";



const isLong: any = null;

function $asNull () {
    return 'null'
}

function $asInteger (i: any) {
    if (isLong && isLong(i)) {
        return i.toString()
    } else {
        return $asNumber(i)
    }
}

function $asNumber (i: any) {
    var num = Number(i);
    if (isNaN(num)) {
        return 'null'
    } else {
        return '' + num
    }
}

function $asBoolean (bool: any) {
    return bool && 'true' || 'false' // eslint-disable-line
}

function $asString (str: any) {
    if (str instanceof Date) {
        return '"' + str.toISOString() + '"'
    } else if (str === null) {
        return '""'
    } else if (str instanceof RegExp) {
        str = str.source
    } else if (typeof str !== 'string') {
        str = str.toString()
    }

    if (str.length < 42) {
        return $asStringSmall(str)
    } else {
        return JSON.stringify(str)
    }
}

function $asStringSmall (str: any) {
    var result = '';
    var last = 0;
    var found = false;
    var l = str.length;
    var point = 255;
    for (var i = 0; i < l && point >= 32; i++) {
        point = str.charCodeAt(i);
        if (point === 34 || point === 92) {
            result += str.slice(last, i) + '\\';
            last = i;
            found = true
        }
    }

    if (!found) {
        result = str
    } else {
        result += str.slice(last)
    }
    return point < 32 ? JSON.stringify(str) : '"' + result + '"'
}

function pushArr(target: any[], other: any[]): any[] {
    if (other == null) {
        return target;
    }
    if (target == null) {
        return other;
    }
    const len = other.length;
    let i;
    for(i=0;i<len;i++){
        target.push(other[i]);
    }
    return target;
}

export = {
    register: (app: Valory) => {
        
    },
    definitions: {},
}